#!/usr/bin/env ruby

require 'rubygems'
require 'sass'
require File.join(File.dirname(__FILE__), 'packer.rb')

class NoSassDirError < StandardError; end

def sassify(current_dir, top_dir, pack=true, max_depth=4)
  @css = {}
  Dir.chdir(current_dir)

  i = 1
  until Dir.getwd.match(/sass\/?$/) do
    raise NoSassDirError if (i > max_depth) or (Dir.getwd == top_dir)
    Dir.chdir('../')
    i += 1
  end

  puts "Sass dir = #{Dir.getwd}"


  sass_files = Dir.open('.') do |d|
    d.find_all { |f| f.match /\.sass$/ }
  end

  sass_files.each do |sass|
    @last_sass = sass
    css_file = '../' + sass.gsub(/\.sass$/, '.css')
    puts "Sassifying #{sass}..."
    sass_file = File.new(sass, 'r')
    sass_template = sass_file.read
    sass_file.close
    sass_engine = Sass::Engine.new(sass_template)
    @css[css_file] = sass_engine.render
  end
  
  @css.each_pair do |file, css|
    packer = Rainpress::Packer.new
    final_css = pack ? packer.compress(css) : css

    css_file = File.new(file, 'w')
    css_file.write("/* THIS FILE IS AUTOMATICALLY GENERATED. CHANGES SHOULD BE MADE IN THE SASS FILES. */\n")
    css_file.write(final_css)
    css_file.close
  end

rescue Sass::SyntaxError => e
  puts "\nSass syntax error!"
  puts "#{@last_sass}, Line #{e.sass_line}: #{e}"
rescue NoSassDirError
  puts "Can't find sass dir!"
end
